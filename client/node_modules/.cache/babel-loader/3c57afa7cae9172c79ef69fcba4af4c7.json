{"ast":null,"code":"import _defineProperty from \"/Users/kgh/Development/git_Project/knut-database-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { Map } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions'; // 액션 생성 및 타입 설정\n\nvar SET_SIGNUP = 'signup/SET_SIGNUP';\nvar SHOW_SIGNUP = 'signup/SHOW_SIGNUP'; // 액션 생성 함수 생성 - export로 내보내야함\n\nexport var setSignup = createAction(SET_SIGNUP);\nexport var showSignup = createAction(SHOW_SIGNUP); // 리듀서의 상태 초기화\n\nvar initialState = Map({\n  user_id: '',\n  user_password: '',\n  user_name: '',\n  result: null\n}); //  리듀서를 내보내려면 export default 모듈당 딱하나의 것만 보보낸다.\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, SHOW_SIGNUP, function (state, action) {\n  var _action$payload = action.payload,\n      user_id = _action$payload.user_id,\n      user_password = _action$payload.user_password,\n      user_name = _action$payload.user_name,\n      result = _action$payload.result;\n  console.log(\"action payload => \" + action.payload);\n  console.log(JSON.stringify(action.payload));\n  console.log(\"user_id =>\" + user_id + \"user_password => \" + user_password);\n  return state.set(user_id, user_password);\n}), _defineProperty(_handleActions, SET_SIGNUP, function (state, action) {\n  // 액션을 만들면 파라미터로 전달한 객체를 payload로 설정한다\n  var _action$payload2 = action.payload,\n      user_id = _action$payload2.user_id,\n      user_password = _action$payload2.user_password,\n      user_name = _action$payload2.user_name,\n      result = _action$payload2.result;\n  console.log(\"action payload => \" + action.payload);\n  console.log(JSON.stringify(action.payload));\n  console.log(\"user_id =>\" + action.payload + \"user_password => \" + user_password + \"user_name => \" + user_name);\n  return state.set(user_id, user_password, user_name, result); // return setSignup('value',action.payload);\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/kgh/Development/git_Project/knut-database-project/client/src/modules/Signup.js"],"names":["Map","handleActions","createAction","SET_SIGNUP","SHOW_SIGNUP","setSignup","showSignup","initialState","user_id","user_password","user_name","result","state","action","payload","console","log","JSON","stringify","set"],"mappings":";;;;AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,QAAyC,eAAzC,C,CAGA;;AAEA,IAAMC,UAAU,GAAG,mBAAnB;AACA,IAAMC,WAAW,GAAG,oBAApB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAGH,YAAY,CAACC,UAAD,CAA9B;AACP,OAAO,IAAMG,UAAU,GAAGJ,YAAY,CAACE,WAAD,CAA/B,C,CACP;;AACA,IAAMG,YAAY,GAAGP,GAAG,CAAC;AACrBQ,EAAAA,OAAO,EAAC,EADa;AAErBC,EAAAA,aAAa,EAAC,EAFO;AAGrBC,EAAAA,SAAS,EAAC,EAHW;AAIrBC,EAAAA,MAAM,EAAG;AAJY,CAAD,CAAxB,C,CAOA;;AACA,eAAeV,aAAa,uDACvBG,WADuB,EACR,UAACQ,KAAD,EAAOC,MAAP,EAAiB;AAAA,wBACmBA,MAAM,CAACC,OAD1B;AAAA,MACtBN,OADsB,mBACtBA,OADsB;AAAA,MACdC,aADc,mBACdA,aADc;AAAA,MACAC,SADA,mBACAA,SADA;AAAA,MACUC,MADV,mBACUA,MADV;AAE7BI,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBH,MAAM,CAACC,OAA1C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACC,OAAtB,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeR,OAAf,GAAyB,mBAAzB,GAA8CC,aAA1D;AACA,SAAOG,KAAK,CAACO,GAAN,CAAUX,OAAV,EAAmBC,aAAnB,CAAP;AACH,CAPuB,mCAQvBN,UARuB,EAQT,UAACS,KAAD,EAAOC,MAAP,EAAiB;AAE5B;AAF4B,yBAGoBA,MAAM,CAACC,OAH3B;AAAA,MAGrBN,OAHqB,oBAGrBA,OAHqB;AAAA,MAGbC,aAHa,oBAGbA,aAHa;AAAA,MAGCC,SAHD,oBAGCA,SAHD;AAAA,MAGWC,MAHX,oBAGWA,MAHX;AAI5BI,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBH,MAAM,CAACC,OAA1C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACC,OAAtB,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,MAAM,CAACC,OAAtB,GAAgC,mBAAhC,GAAqDL,aAArD,GACX,eADW,GACMC,SADlB;AAGA,SAAOE,KAAK,CAACO,GAAN,CAAUX,OAAV,EAAkBC,aAAlB,EAAgCC,SAAhC,EAA0CC,MAA1C,CAAP,CAT4B,CAU5B;AACH,CAnBuB,oBAsB1BJ,YAtB0B,CAA5B","sourcesContent":["import {Map} from 'immutable';\nimport {handleActions,createAction} from 'redux-actions';\n\n\n// 액션 생성 및 타입 설정\n\nconst SET_SIGNUP = 'signup/SET_SIGNUP';\nconst SHOW_SIGNUP = 'signup/SHOW_SIGNUP';\n\n// 액션 생성 함수 생성 - export로 내보내야함\nexport const setSignup = createAction(SET_SIGNUP);\nexport const showSignup = createAction(SHOW_SIGNUP);\n// 리듀서의 상태 초기화\nconst initialState = Map({\n    user_id:'',\n    user_password:'',\n    user_name:'',\n    result : null,\n})\n\n//  리듀서를 내보내려면 export default 모듈당 딱하나의 것만 보보낸다.\nexport default handleActions({\n    [SHOW_SIGNUP] : (state,action) =>{\n        const {user_id,user_password,user_name,result} =action.payload;\n        console.log(\"action payload => \" + action.payload);\n        console.log(JSON.stringify(action.payload));\n        console.log(\"user_id =>\" + user_id + \"user_password => \"+ user_password);\n        return state.set(user_id, user_password,);\n    },\n    [SET_SIGNUP] : (state,action) =>{\n\n        // 액션을 만들면 파라미터로 전달한 객체를 payload로 설정한다\n        const {user_id,user_password,user_name,result} =action.payload;\n        console.log(\"action payload => \" + action.payload);\n        console.log(JSON.stringify(action.payload));\n        console.log(\"user_id =>\" + action.payload + \"user_password => \"+ user_password\n        +\"user_name => \"+ user_name);\n\n        return state.set(user_id,user_password,user_name,result);\n        // return setSignup('value',action.payload);\n    }\n    \n//초기화 부분 반드시 넣어줘야한다.\n},initialState);"]},"metadata":{},"sourceType":"module"}